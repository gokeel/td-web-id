<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Auth extends MY_Controller {
	public function __construct() {
        parent::__construct();
        $this->load->library('oauth2/OAuth2');
	}

    public function social_media($provider, $user_level=null)
    {
        $this->load->helper('url_helper');

        $this->config->load($provider);

        // $this->load->spark('oauth2/0.3.1');

        $provider = $this->oauth2->provider($provider, array(
            'id' => $this->config->item('client_id'),
            'secret' => $this->config->item('client_secret')
        ));

        if ( ! $this->input->get('code'))
        {
            // By sending no options it'll come back here
            $provider->authorize();
        }
        else
        {
            // Howzit?
            try
            {
                $token = $provider->access($_GET['code']);

                $user = $provider->get_user_info($token);

                // Here you should use this information to A) look for a user B) help a new user sign up with existing data.
                // If you store it all in a cookie and redirect to a registration page this is crazy-simple.
                // echo "<pre>Tokens: ";
                // var_dump($token);

                // echo "\n\nUser Info: ";
                // var_dump($user);

                $data['logged_user'] = $user;

                // check if it's existing user
				$check_exist = $this->user->check_user_email_exist($user['email']);
				if($check_exist){
					// get user data
					$user_data = $this->user->get_user_data(array('email_login' => $user['email']));
					$this->session->set_userdata('logged', 'in');
					$this->session->set_userdata('userid', $user_data->row()->user_id);
					$this->session->set_userdata('email', $user_data->row()->email_login);
					$this->session->set_userdata('fn', $user_data->row()->first_name);
					$this->session->set_userdata('ln', $user_data->row()->last_name);
					$this->session->set_userdata('level', $user_data->row()->user_level);
					
					if($user_level==null)
						redirect('my_account');
					else
						redirect('users/edit_profile');
				}
				else {
					if($user_level==null)
						$this->show_error_page('204', $this->lang->line('please_register_using_signup_menu'));
					else{
						$data['captcha'] = $this->generate_captcha();
						$data['page_title'] = 'Sign Up!';
						// get provinces
						$data['provinces'] = $this->loc->get_province();
						// get root course category
						$data['programs'] = $this->content->get_root_category('course');

						$data['image_user_id'] = '';
						$data['image_user_filename'] = '';
						// store the image
						if($user['image'] <> ""){
							$image_file_info = $user['image'];
							$file_info = pathinfo($image_file_info);
							$new_file_name = $user['uid'].'_'.$file_info['basename'];
							//Get the file
							$content = file_get_contents($image_file_info);
							//Store in the filesystem.
							$fp = fopen($_SERVER['DOCUMENT_ROOT']."/dev20/assets/uploads/".$new_file_name, "w");
							fwrite($fp, $content);
							fclose($fp);

							$upload_data = array(
								'file_name' => $new_file_name,
								'file_type' => $file_info['extension'],
								'file_extension' => $file_info['extension'],
								'img_width' => '0',
								'img_height' => '0',
								'file_size' => '0',
								'is_image' => '1'
							);

							$add_media = $this->common->add_to_table('media_files', $upload_data);
							$data['image_user_id'] = $add_media->output;
							$data['image_user_filename'] = $new_file_name;
						}

						$this->open_page('wizard_'.$user_level.'_registration', $data);
					}
				}
            }

            catch (OAuth2_Exception $e)
            {
            	$this->show_error_page('700', $e);
                // show_error('That didnt work: '.$e);
            }

        }
    }

    function generate_captcha(){
		//generate captcha
		$this->load->helper('captcha');
		$captcha_data = array(
			'word' => rand(1000, 9999),
			'img_path' => 'assets/captcha/',
			'img_url' => base_url().'assets/captcha/',
			//'font_path' => './path/to/fonts/texb.ttf',
			'img_width' => '150',
			'img_height' => 30,
			'expiration' => 7200
			);

		$cap = create_captcha($captcha_data);
		$insert_cap = array(
			'captcha_time' => $cap['time'],
			'ip_address' => $this->input->ip_address(),
			'word' => $cap['word']
		);
		$query = $this->db->insert_string('captcha', $insert_cap);
		$this->db->query($query);
		//echo $cap['image'];
		$captcha = $cap['image'];

		return $captcha;
	}
}